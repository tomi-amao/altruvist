// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  zitadelId        String             @unique
  email            String
  name             String
  skills           String[]
  bio              String?
  profilePicture   String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  taskApplications taskApplications[]
  locale           String
  roles            String[]
  permissions      String[]
  charity          charities?         @relation(fields: [charityId], references: [id])
  charityId        String?             @db.ObjectId
}

model charities {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String
  website       String?
  contactPerson String?
  contactEmail  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  tasks         tasks[]
  users         users[]
}

model tasks {
  id                      String                   @id @default(auto()) @map("_id") @db.ObjectId
  title                   String
  description             String
  requiredSkills          String[]
  estimatedHours          Int?
  deadline                DateTime
  category                TaskCategory
  experienceLevel         ExperienceLevel?
  volunteersNeeded        Int
  urgency                 TaskUrgency?
  deliverables            String
  communicationPreference CommunicationPreference?
  resourcesProvided       String?
  additionalRequirements  String?
  charity                 charities                @relation(fields: [charityId], references: [id])
  charityId               String                   @db.ObjectId
  status                  TaskStatus
  location                TaskLocation?
  tags                    String[]
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  taskApplications        taskApplications[]
}

model taskApplications {
  id        String            @id @default(auto()) @map("_id") @db.ObjectId
  task      tasks             @relation(fields: [taskId], references: [id])
  taskId    String            @db.ObjectId
  user      users             @relation(fields: [userId], references: [id])
  userId    String            @db.ObjectId
  status    ApplicationStatus
  message   String?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

enum TaskCategory {
  WEB_DEVELOPMENT
  MOBILE_APP
  DATA_ANALYSIS
  UX_UI_DESIGN
  OTHER
}

enum ExperienceLevel {
  BEGINNER
  INTERMEDIATE
  EXPERT
}

enum TaskUrgency {
  LOW
  MEDIUM
  HIGH
}

enum TaskStatus {
  OPEN
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum TaskLocation {
  REMOTE
  ONSITE
  HYBRID
}

enum CommunicationPreference {
  EMAIL
  MESSAGE
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
  WITHDRAWN
}
